{"version":3,"sources":["expance.js","incomes.js","App.js","index.js"],"names":["Container","styled","article","_templateObject","InputLine","div","_templateObject2","Input","input","_templateObject3","LineTitle","dt","_templateObject4","LineInput","dd","_templateObject5","Button","button","_templateObject6","Expance","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","transaction","category","handleChangeInput","event","setState","defineProperty","target","name","value","handleEnter","onSubmit","props","_this$state","Math","abs","parseFloat","inherits","createClass","key","_this$state2","react_default","a","createElement","onChange","onClick","Component","incomes_templateObject","incomes_templateObject2","incomes_templateObject3","incomes_templateObject4","incomes_templateObject5","incomes_templateObject6","Incomes","incomes_Container","incomes_InputLine","incomes_LineTitle","incomes_LineInput","incomes_Input","incomes_Button","DateButton","App_templateObject","DateLine","App_templateObject2","Link","span","App_templateObject3","_ref","selected","Nav","nav","App_templateObject4","Table","table","App_templateObject5","App","handleAddDay","date","add","handleSubtractDay","subtract","handleNavClick","navSelected","getAttribute","handleSubmitTransaction","sum","TodayDate","transactions","newTransaction","format","newTransactions","toConsumableArray","sort","b","aDate","moment","bDate","isAfter","onToday","currentMonthTransactions","filter","_ref2","transactionDate","isSame","dailyMoney","reduce","acc","daysInMonth","expanseBeforeToday","_ref3","isBefore","_ref4","incomeBeforeToday","console","log","initState","storageState","localStorage","getItem","JSON","parse","objectSpread","setItem","stringify","_this$state3","expance","incomes","_ref5","map","_ref6","index","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5f4967aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.article`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputLine = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-family: \"Marmelad\";\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid #ffffff;\r\n  margin-left: 5px;\r\n  color: #ffffff;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 20px;\r\n  *:active\r\n    outline: none;\r\n`;\r\n\r\nconst LineTitle = styled.dt`\r\n  width: 150px;\r\n`;\r\n\r\nconst LineInput = styled.dd`\r\n  width: 150px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-family: \"Marmelad\";\r\n  color: #ffffff;\r\n  border: 1px solid #ffffff;\r\n  border-radius: 31px;\r\n  background-color: transparent;\r\n  margin: 3px;\r\n  text-align: center;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nexport class Expance extends Component {\r\n  state ={\r\n    transaction: null,\r\n    category: null,\r\n  }\r\n\r\n  handleChangeInput = event => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  handleEnter = () => {\r\n    const {onSubmit} =this.props;\r\n    const {transaction, category} = this.state;\r\n\r\n    onSubmit(-1 * Math.abs(parseFloat(transaction)), category);\r\n    this.setState({transaction: null, category: null});\r\n\r\n  }\r\n  render() {\r\n    const {transaction, category} = this.state;\r\n    return (\r\n      <Container>\r\n        <dl>\r\n          <InputLine>\r\n            <LineTitle>Внести витрати</LineTitle>\r\n            <LineInput>\r\n              <Input \r\n              name=\"transaction\"\r\n              onChange={this.handleChangeInput}\r\n              value={transaction || \"\"} />\r\n            </LineInput>\r\n          </InputLine>\r\n\r\n          <InputLine>\r\n            <LineTitle>Категорія:</LineTitle>\r\n\r\n            <LineInput>\r\n            <Input\r\n            name=\"category\"\r\n            onChange={this.handleChangeInput}\r\n            value={category || \"\"}\r\n            />\r\n            </LineInput>\r\n          </InputLine>\r\n        </dl>\r\n        <Button onClick={this.handleEnter}>Внести</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Expance;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.article`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputLine = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-family: \"Marmelad\";\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid #ffffff;\r\n  margin-left: 5px;\r\n  color: #ffffff;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 20px;\r\n  *:active\r\n    outline: none;\r\n`;\r\n\r\nconst LineTitle = styled.dt`\r\n  width: 150px;\r\n`;\r\n\r\nconst LineInput = styled.dd`\r\n  width: 150px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-family: \"Marmelad\";\r\n  color: #ffffff;\r\n  border: 1px solid #ffffff;\r\n  border-radius: 31px;\r\n  background-color: transparent;\r\n  margin: 3px;\r\n  text-align: center;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nexport class Incomes extends Component {\r\n  state ={\r\n    transaction: null,\r\n    category: null,\r\n  }\r\n  \r\n  handleChangeInput = event => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  handleEnter = () => {\r\n    const {onSubmit} =this.props;\r\n    const {transaction, category} = this.state;\r\n\r\n    onSubmit(Math.abs(parseFloat(transaction)), category);\r\n    this.setState({transaction: null, category: null});\r\n\r\n  }\r\n  render() {\r\n    const {transaction, category} = this.state;\r\n    return (\r\n      <Container>\r\n        <dl>\r\n          <InputLine>\r\n            <LineTitle>Внести Дохід</LineTitle>\r\n            <LineInput>\r\n              <Input \r\n              name=\"transaction\"\r\n              onChange={this.handleChangeInput}\r\n              value={transaction || \"\"} />\r\n            </LineInput>\r\n          </InputLine>\r\n\r\n          <InputLine>\r\n            <LineTitle>Категорія:</LineTitle>\r\n\r\n            <LineInput>\r\n            <Input\r\n            name=\"category\"\r\n            onChange={this.handleChangeInput}\r\n            value={category || \"\"}\r\n            />\r\n            </LineInput>\r\n          </InputLine>\r\n        </dl>\r\n        <Button onClick={this.handleEnter}>Внести</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Incomes;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Expanse from \"./expance\";\nimport Incomes from \"./incomes\";\nconst DateButton = styled.button`\n  color: white;\n  border: 1px solid white;\n  border-radius: 50%;\n  background-color: transparent;\n  width: 32px;\n  height: 32px;\n  margin: 3px;\n  cursor: pointer;\n  text-align: center;\n`;\n\nconst DateLine = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Link = styled.span`\n  font-family: 'Marmelad';\n  cursor: pointer;\n  color: white;\n  margin: 0 8px;\n  border-bottom: ${({selected}) =>\n    selected ? '2px solid white' : 'none'};\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: center;\n  font-size: 25px;\n  padding: 40px 0 15px;\n`;\n\nconst Table = styled.table`\n  width: 450px;\n  text-align: right;\n  padding-top: 30px;\n  margin: 0 auto;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let storageState = localStorage.getItem('state');\n    let initState;\n\n    if (storageState != null) {\n      storageState = JSON.parse(storageState);\n      initState = {...storageState, date: moment(storageState.date)};\n    } else {\n      initState = {\n        date: moment(),\n        navSelected: 'incomes',\n        transactions: [],\n      };\n    }\n\n    this.state = initState;\n  }\n\n  handleAddDay = () => {\n    this.setState({date: this.state.date.add(1, 'day')});\n  };\n\n  handleSubtractDay = () => {\n    this.setState({date: this.state.date.subtract(1, 'day')});\n  };\n\n  handleNavClick = event => {\n    this.setState({navSelected: event.target.getAttribute('name')});\n  };\n\n  handleSubmitTransaction = (sum, category) => {\n    const {date: TodayDate, transactions} = this.state;\n\n    const newTransaction = {\n      date: TodayDate.format('DD.MM.YYYY'),\n      category: category,\n      sum: sum,\n    };\n\n    const newTransactions = [...transactions, newTransaction];\n\n    newTransactions.sort((a, b) => {\n      const aDate = moment(a.date, 'DD.MM.YYYY');\n      const bDate = moment(b.date, 'DD.MM.YYYY');\n      return aDate.isAfter(bDate);\n    });\n\n    this.setState({transactions: newTransactions});\n  };\n\n  componentDidUpdate() {\n    const {date} = this.state;\n    localStorage.setItem(\n      'state',\n      JSON.stringify({...this.state, date: date.format()}),\n    );\n  }\n\n  onToday = () => {\n    const {transactions, date} = this.state;\n\n    const currentMonthTransactions = transactions.filter(\n      ({date: transactionDate}) =>\n        moment(transactionDate, 'DD.MM.YYYY').isSame(date, 'month'),\n    );\n\n    const dailyMoney =\n      currentMonthTransactions.reduce(\n        (acc, transaction) =>\n          transaction.sum > 0 ? transaction.sum + acc : acc,\n        0,\n      ) / moment(date).daysInMonth();\n\n    const transactionsBeforeThisDayAndInThisDay = currentMonthTransactions.filter(\n      ({date: transactionDate}) =>\n        moment(transactionDate, 'DD.MM.YYYY').isBefore(\n          date,\n          'date',\n        ) ||\n        moment(transactionDate, 'DD.MM.YYYY').isSame(date, 'date'),\n    );\n\n    const expanseBeforeToday = transactionsBeforeThisDayAndInThisDay.reduce(\n      (acc, {sum}) => (sum < 0 ? acc + sum : acc),\n      0,\n    );\n\n    const incomeBeforeToday = date.date() * dailyMoney;\n\n    console.log({dailyMoney, expanseBeforeToday, incomeBeforeToday});\n\n    return incomeBeforeToday + expanseBeforeToday;\n  };\n\n  render() {\n    const {date, navSelected, transactions} = this.state;\n\n    return (\n      <div>\n        <header>\n          <h1>Бюджет на кожен день</h1>\n          <DateLine>\n            <p>{date.format('DD.MM.YYYY')}</p>\n            <DateButton onClick={this.handleSubtractDay}>\n              –\n            </DateButton>\n            <DateButton onClick={this.handleAddDay}>+</DateButton>\n          </DateLine>\n          <p>На сьогодні: {this.onToday()} гривень</p>\n        </header>\n        <main>\n          <Nav>\n            <Link\n              name=\"expanse\"\n              onClick={this.handleNavClick}\n              selected={navSelected === 'expanse'}\n            >\n              Витрати на сьогодні\n            </Link>\n\n            <Link\n              name=\"incomes\"\n              onClick={this.handleNavClick}\n              selected={navSelected === 'incomes'}\n            >\n              Доходи\n            </Link>\n          </Nav>\n\n          {navSelected === 'expanse' ? (\n            <Expanse onSubmit={this.handleSubmitTransaction} />\n          ) : (\n            <Incomes onSubmit={this.handleSubmitTransaction} />\n          )}\n\n          <Table>\n            <tbody>\n              {transactions\n                .filter(({date: transactionDate}) =>\n                  moment(transactionDate, 'DD.MM.YYYY').isSame(\n                    date,\n                    'month',\n                  ),\n                )\n                .map(({date, sum, category}, index) => (\n                  <tr key={index}>\n                    <td>{date}</td>\n                    <td>{sum} &#8372;</td>\n                    <td>{category}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}